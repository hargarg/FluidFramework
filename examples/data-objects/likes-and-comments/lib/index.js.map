{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    DataObjectFactory,\n} from \"@fluidframework/aqueduct\";\nimport {\n    SyncedDataObject,\n    setSyncedCounterConfig,\n    useSyncedCounter,\n    setSyncedArrayConfig,\n    useSyncedArray,\n    setSyncedStringConfig,\n    useSyncedString,\n} from \"@fluidframework/react\";\nimport { CollaborativeInput } from \"@fluidframework/react-inputs\";\nimport { SharedCounter } from \"@fluidframework/counter\";\nimport { SharedObjectSequence, SharedString } from \"@fluidframework/sequence\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { getAuthorName } from \"./utils\";\n\nconst defaultImgUrl = \"https://picsum.photos/id/221/1200/800\";\n\n// Interfaces\n\ninterface ILikesAndCommentsViewProps {\n    syncedDataObject: SyncedDataObject,\n}\n\ninterface IComment {\n    author: string,\n    message: string;\n}\n\n// ---- Fluid Object w/ a Functional React view using a mixture of DDSes and local state ----\n\nfunction LikesAndCommentsView(\n    props: ILikesAndCommentsViewProps,\n) {\n    // Use synced states\n    const [likes, likesReducer] = useSyncedCounter(props.syncedDataObject, \"likes\");\n    const [comments, commentReducer] = useSyncedArray<IComment>(props.syncedDataObject, \"comments\");\n    const [imgUrl, setImgUrl] = useSyncedString(props.syncedDataObject,\"imgUrl\");\n    // Use local state\n    const [currentComment, setCurrentComment] = React.useState(\"\");\n\n    // Convert data to JSX for comments state\n    const commentListItems = comments.map((item, key) => (\n        <li key={key}>\n            {`${item.author}: ${item.message}`}\n        </li>\n    ));\n\n    // Render\n    return (\n        <div>\n            <div>\n                <img width='100%' src={imgUrl?.getText()}/>\n                {imgUrl !== undefined\n                    ? <CollaborativeInput\n                        style={{ width: \"90%\" }}\n                        sharedString={imgUrl}\n                        onInput={(value: SharedString) => setImgUrl({ value })}\n                    />\n                    : undefined}\n            </div>\n            <span>\n                {`Likes: ${likes}`}\n            </span>\n            <button onClick={() => likesReducer.increment(1)}>\n                {\"+\"}\n            </button>\n            <div>\n                <div>\n                    <input\n                        type=\"text\"\n                        value={currentComment}\n                        onChange={(e) => setCurrentComment(e.target.value)}\n                        placeholder=\"Add Comment\"\n                    />\n                    <button\n                        onClick={() => {\n                            commentReducer.add({\n                                message: currentComment,\n                                author: getAuthorName(props.syncedDataObject),\n                            });\n                            setCurrentComment(\"\");\n                        }}\n                    >{\"Submit\"}</button>\n                </div>\n                <ul>{commentListItems}</ul>\n            </div>\n        </div>\n    );\n}\n\n/**\n * LikesAndComments example using multiple DDS hooks\n */\nexport class LikesAndComments extends SyncedDataObject {\n    constructor(props) {\n        super(props);\n        // Declare configs for each synced state the view will need\n        setSyncedCounterConfig(\n            this,\n            \"likes\",\n        );\n        setSyncedArrayConfig<IComment>(\n            this,\n            \"comments\",\n        );\n        setSyncedStringConfig(\n            this,\n            \"imgUrl\",\n            defaultImgUrl,\n        );\n    }\n\n    public render(div: HTMLElement) {\n        ReactDOM.render(\n            <div>\n                <LikesAndCommentsView\n                    syncedDataObject={this}\n                />\n            </div>,\n            div,\n        );\n        return div;\n    }\n}\n\n// ----- FACTORY SETUP -----\nexport const LikesAndCommentsInstantiationFactory = new DataObjectFactory(\n    \"likes-and-comments\",\n    LikesAndComments,\n    [\n        SharedCounter.getFactory(),\n        SharedObjectSequence.getFactory(),\n        SharedString.getFactory(),\n    ],\n    {},\n);\nexport const fluidExport = LikesAndCommentsInstantiationFactory;\n"]}